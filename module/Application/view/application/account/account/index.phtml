<?php
use Application\Entity\Account;
use Application\Entity\Purchase;
use Application\View\Helper\PurchaseTable;
use SMCommon\View\Helper\FormatDate;
/* @var $this SMCommon\View\Renderer\PhpRenderer */
echo $this->pageHeader('Account');

$accounts = $this->accounts;
$table = $this->table();
$table->setData($accounts);

$table->addColumn(array(
	'headTitle' 	=> 'Name',
	'dataMethod'	=> function(Account $account) {
		$listUrl = $this->url(
				'accounts/list-action',
				array(
					'accountid' => $account->getId()
				)
		);
		return $this->prettyprint()->link($listUrl, $account->getName());
	}
));

$table->addColumn(array(
	'headTitle' 	=> 'Actions',
	'dataMethod'	=> function(Account $account) {
		$result = '';

		$editButtonGroup = array();

		// Edit button
		$editUrl = $this->url(
				'accounts/list-action',
				array(
					'action' 	=> 'edit',
					'accountid' => $account->getId()
				)
		);
		$editButtonGroup[] = array(
			'title' => 'Edit',
			'url'	=> $editUrl
		);

		// Add the edit button in the submenu again.
		$editButtonGroup[] = array(
			'title' => 'Edit Account',
			'url'	=> $editUrl
		);

		// Edit users (for submenu)
		$editUsersUrl = $this->url('accounts/users', array(
			'accountid'=> $account->getId(),
		));
		$editButtonGroup[] = array(
			'title' => 'Edit users',
			'url'	=> $editUsersUrl
		);

		$result .= $this->prettyprint()->splitButton($editButtonGroup);

		// Add bill button
		$addPurchaseUrl = $this->url('accounts/bills', array(
			'accountid'	=> $account->getId(),
		));
		$result .= $this->prettyprint()->button($addPurchaseUrl, 'Invoices');

		// Add purchase button
		$addPurchaseUrl = $this->url('accounts/purchases', array(
			'action' 	=> 'add',
			'accountid'	=> $account->getId(),
		));
		$result .= $this->prettyprint()->button($addPurchaseUrl, 'Add purchase');

		return $result;
	}
));

$addAccountUrl = $this->url('accounts/action', array('action' => 'create'));

$purchaseTable = $this->purchasetable();
$purchaseTable->addDescriptionColumn();
$purchaseTable->addAmountColumn();
$purchaseTable->setData($this->unassignedPurchases);

// Add the assign action buttons
$purchaseTable->addColumn([
	'headTitle' => 'Assign',
	'dataMethod' => function(Purchase $purchase) use ($accounts) {
		$html = '';
		foreach ($accounts as $account) {
			$url = $this->url('accounts/purchases', [
				'accountid' => $purchase->getAccount()->getId(),
				'purchaseid' => $purchase->getId(),
				'action' => 'assign'
			]);
			$url .= '?new_account=' . $account->getId();
			$html .= $this->prettyprint()->button($url, $account->getName(), 'primary');
		}
		return $html;
	}
]);



?>

<?php if (count($this->unassignedPurchases) > 0): ?>
	<h3>Unassigned Purchases</h3>
	<?php echo $this->prettyprint()->alert('The purchases listed below are not assigned to an account. Please assign them to an account by clicking on the appropriate button.') ?>
	<?php echo $purchaseTable; ?>
	<h3>Accounts</h3>
<?php endif ?>

<?php echo $table; ?>
<span class="pull-right">
	<a class="btn" href="<?php echo $addAccountUrl; ?>">Create account</a>
</span>